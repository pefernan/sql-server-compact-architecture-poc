#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

services:

  mssql:
    container_name: sql-server
    image: mcr.microsoft.com/mssql/server:2022-latest
    profiles: [ "infra", "example-only", "full" ]
    restart: no
    hostname: mssql-host
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "Pass@123"
      MSSQL_PID: Developer
    ports:
      - 1433:1433
    healthcheck:
      test: [ "CMD", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P StrongP@assword! -Q 'SELECT 1' || exit 1" ]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s

  mssql-tools:
    image: mcr.microsoft.com/mssql-tools:latest
    restart: no
    command: "/opt/mssql-tools/bin/sqlcmd -S mssql-host -l 60 -U sa -P 'Pass@123' -d master -i /tmp/runtime-persistence.sql -i /tmp/user-tasks.sql"
    depends_on:
      - mssql
    volumes:
      - ./sql/runtime-persistence.sql:/tmp/runtime-persistence.sql
      - ./sql/user-tasks.sql:/tmp/user-tasks.sql

  process-compact-architecture-service:
    container_name: process-compact-architecture-service
    image: dev.local/${USER}/process-compact-architecture-service:${PROJECT_VERSION}
    profiles: ["example-only", "full"]
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      QUARKUS_HTTP_CORS_ORIGINS: "/.*/"
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgres:5432/kogito"
      QUARKUS_DATASOURCE_REACTIVE_URL: "postgresql://postgres:5432/kogito"
      QUARKUS_DATASOURCE_USERNAME: kogito-user
      QUARKUS_DATASOURCE_PASSWORD: kogito-pass
      QUARKUS_DATASOURCE_DB_KIND: postgresql
      KOGITO_JOBS_SERVICE_URL: http://${DOCKER_GATEWAY_HOST}:8080
      KOGITO_SERVICE_URL: http://${DOCKER_GATEWAY_HOST}:8080
      KOGITO_DATAINDEX_HTTP_URL: http://${DOCKER_GATEWAY_HOST}:8080
    extra_hosts:
      - "${DOCKER_GATEWAY_HOST}:host-gateway"

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:legacy
    profiles: ["full"]
    ports:
      - "8480:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./keycloak/kogito-realm.json:/tmp/kogito-realm.json
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/realms/kogito"]
      interval: 2s
      timeout: 1s
      retries: 50
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: kogito-user
      DB_SCHEMA: public
      DB_PASSWORD: kogito-pass
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/kogito-realm.json

  management-console:
    container_name: management-console
    image: ${KOGITO_MANAGEMENT_CONSOLE_IMAGE}
    profiles: ["full"]
    ports:
      - 8280:8080
    depends_on:
      process-compact-architecture-service:
        condition: service_started
      # keycloak:
      #   condition: service_healthy
    volumes:
      - ./svg/:/home/kogito/data/svg/
    environment:
      RUNTIME_TOOLS_MANAGEMENT_CONSOLE_KOGITO_ENV_MODE: "DEV"
      RUNTIME_TOOLS_MANAGEMENT_CONSOLE_DATA_INDEX_ENDPOINT: http://${DOCKER_GATEWAY_HOST:-host.docker.internal}:8080/graphql
      # KOGITO_CONSOLES_KEYCLOAK_HEALTH_CHECK_URL: http://localhost:8480/auth/realms/kogito/.well-known/openid-configuration
      # KOGITO_CONSOLES_KEYCLOAK_URL: http://localhost:8480/auth
      # KOGITO_CONSOLES_KEYCLOAK_REALM: kogito
      # KOGITO_CONSOLES_KEYCLOAK_CLIENT_ID: kogito-console-quarkus
